#version 460 core

#define PI 3.1415926538f
#define MAX 32
#define SIZE 256
#define N -128
#define LX 1000
#define LY 1000

void propagateWave();
void waveDispersion(in float kx, in float ky, out float result);
void complexMultiply(in vec2 c1, in vec2 c2, out vec2 result);

layout(local_size_x = MAX, local_size_y = MAX, local_size_z = 1) in;

layout (std430, binding = 0) buffer SpecSSBO {
    vec2 specData[];
};

void main()
{
    propagateWave();
}

void propagateWave()
{
    int x = int(MAX * gl_WorkGroupID.x + gl_LocalInvocationID.x);
    int y = int(MAX * gl_WorkGroupID.y + gl_LocalInvocationID.y);
    float kx = 2.0f * PI * (x + N) / LX;
    float ky = 2.0f * PI * (y + N) / LY;

    float omega;
    waveDispersion(kx, ky, omega);

    float dt = specData[65536].x;

    vec2 temp1 = vec2(cos(omega * dt), sin(omega * dt));
    vec2 temp2 = specData[SIZE * x + y];

    vec2 result;
    complexMultiply(temp1, temp2, result);
    
    specData[SIZE * x + y] = result;
}

void waveDispersion(in float kx, in float ky, out float result)
{
    result = sqrt(9.81f * sqrt(pow(kx, 2.0f) + pow(ky, 2.0f)));
}

void complexMultiply(in vec2 c1, in vec2 c2, out vec2 result)
{
    result.x = c1.x * c2.x - c1.y * c2.y;
    result.y = c1.x * c2.y + c1.y * c2.x;
}