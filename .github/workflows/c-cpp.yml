on:
  pull_request:
    types:
      - opened
      - edited
      - closed
      - reopened
      - synchronize
    branches:
      - main

jobs:
  build-linux:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwayland-dev \
            libxkbcommon-x11-dev \
            xorg-dev \
            mesa-utils \
            libglu1-mesa-dev \
            freeglut3-dev \
            mesa-common-dev
      - name: Build application
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
          mkdir release
          cp --recursive run.sh WaveSim resources release
          zip -r release.zip "release"
  merge_job:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwayland-dev \
            libxkbcommon-x11-dev \
            xorg-dev \
            mesa-utils \
            libglu1-mesa-dev \
            freeglut3-dev \
            mesa-common-dev
      - name: Build application
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
          mkdir release
          cp --recursive run.sh WaveSim resources release
          zip -r release.zip "release"

      - name: Create Release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.0.0  # Specify your desired tag here
          release_name: v0.0.0  # Specify your desired release name here

      - name: Upload Executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./build/release.zip
          asset_name: v0.0.0.zip  # Specify your desired asset name here
          asset_content_type: application/zip
          token: ${{ secrets.GITHUB_TOKEN }}
  build-windows:
    if: github.event.pull_request.merged == false
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: lukka/get-cmake

      - name: Configure CMake
        run: cmake -G "Visual Studio 2022" -A x64 -B build -S .
      
      - name: Build
        run: cmake --build build --config Release

      - name: Build application
        run: |
          sudo apt install xorg-dev mesa-utils libglu1-mesa-dev freeglut3-dev mesa-common-dev
          mkdir -p build
          cd build
          cmake ..
          make
          mkdir release
          cp --recursive run.sh WaveSim resources release
          zip -r release.zip "release"  